#java -jar selenium-server-4.25.0.jar standalone --port 4444
# robot -d ./Results .

*** Settings ***
Library  SeleniumLibrary
Library  ../venv/lib/python3.12/site-packages/robot/libraries/Telnet.py
Library  ../venv/lib/python3.12/site-packages/robot/libraries/Collections.py
#Library  ../Libraries/users.py
#Resource  ../Resources/SampleResource.resource
Variables  ../Variables/variable.py

#Suite Setup  Launch Browser
Suite Teardown  Close Browser  #whole robot file
#Test Teardown  Close Browser

*** Variables ***
${var_name}  Magnus

*** Test Cases ***
# Test Name
My First Test Case
    Launch Browser  https://marmelab.com/react-admin-demo
    #Input Text  id:APjFqb  Angas
    #Input Text  name:q  Hello
    #Press Keys  name:q  ENTER
    Login User
    sleep  8s
    #${users}  Get Users Via API
    #Set Suite Variable  ${USERS}  ${users}

*** Keywords ***


Login User
  [Arguments]  ${username}=demo  ${password}=demo
  Wait Until Element Is Visible  //button
  Input Text  name:username  ${username}
  Input Text  name:password  ${password}
  Click Button  //button
  Go To Link  Customers
  Display All Name
  sleep  8s

Go To Link
  [Arguments]  ${text}
  Click Element  //a[text()="${text}"]
  Wait Until Element Is Visible  //tbody//tr
  sleep  5s

Display All Name
    ${web_elems}  Get WebElements  //tbody//tr
    ${elem_len}  Get Length  ${web_elems}
    ${names_list}  Create List
    ${names_dict}  Create Dictionary

    FOR  ${i}  IN RANGE  1  ${elem_len}+1
        ${locator}   Set Variable  (//tbody//tr[${i}]/td[2])
        ${text}  Get Text  ${locator}
        ${status}  Run Keyword And Return Status  Page Should Contain Element  ${locator}//img
        IF  ${status}
            ${text}  Evaluate  r"""${text}""".replace("\\n", "").strip()[1:]
            Log To Console  ${text}
        END

        Append to List  ${names_list}  ${text}
        ${names_dict}  Set To Dictionary  ${names_dict}  name$[i]-${text}
    END




Launch Browser
    [Arguments]  ${url}=https://google.com
    ${options}  Set Variable  add_argument("--start-maximized")
    Open Browser  ${url}  chrome  remote_url=192.168.49.1:4444  options=${options}
If Else Sample
  [Arguments]  ${number}

  ${is_even}  Evaluate  ${number} % 2 == 0
  IF  ${is_even}
      Log To Console  Number is even
  ELSE
      Log To Console  Number is odd
  END

Display List
  ${my_list}  Create List  1  2  3  4

  FOR  ${i}  IN  @{my_list}
      Log To Console  ${i}
  END

For Loop In Range
  FOR  ${counter}  IN RANGE  1  10  1
      Log To Console  ${counter}
  END
Add Two Numbers
  [Arguments]  ${num_1}  ${num_2}
  ${sum}  Evaluate  ${num_1} + ${num_2}
  Log To Console  ${sum}

Concatinate Two Strings
  [Arguments]  ${string_1}  ${string_2}=Mundo
  ${concatinated}  Set Variable  ${string_1} ${string_2}\
  Log To Console  ${concatinated}

Try Else If
  [Arguments]  ${string}
    ${is_hello}=  Evaluate  '${string}' == 'Hello'
    ${is_world}=  Evaluate  '${string}' == 'World'
    
  IF  ${is_hello}
    Log To Console    "Hello"
  ELSE IF    ${is_world}
    Log To Console    "World"
  ELSE
    Log To Console    "Ahri"
  END

Input Text
  [Arguments]  ${locator}  ${text}
  SeleniumLibrary.Input Text  ${locator}  ${text}
  sleep  3s

